{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/layout/Header.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","length","console","log","uuid","concat","toConsumableArray","newContacts","map","Provider","dispatch","_this","setState","axios","get","res","this","data","react_default","a","createElement","value","props","children","Component","Consumer","Contact","showContact","onArrowClick","onDeleteClick","_callee","regenerator_default","wrap","_context","prev","next","delete","t0","stop","output","_this2","name","email","phone","className","onClick","Link","to","bind","Contacts","Fragment","style","color","contacts_Contact","key","TextInputGroup","outputErr","label","onChange","error","htmlFor","classNames","is-invalid","AddContact","errors","onChangeInputHandler","e","defineProperty","target","onSubmitForm","_this$state","newContact","response","preventDefault","abrupt","post","sent","history","push","_this$state2","onSubmit","layout_TextInputGroup","EditContact","editedContact","put","contactId","match","params","resContact","About","NotFound","Test","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","nextProps","prevState","Header","branding","defaultProps","App","context","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3517343d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport uuid from \"uuid\";\r\n\r\nconst Context = React.createContext();\r\n// reducer takes in old state along with action to be done\r\nconst reducer = (state, action) => {\r\n  // action is like this -> {type: 'DELETE_CONTACT', payload: 'Something'}\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(contact => {\r\n          return contact.id !== action.payload; //payload is the deleted contact Id\r\n        })\r\n      };\r\n    case \"ADD_CONTACT\": {\r\n      // action.payload is the (whole contact)\r\n      if (state.contacts.length >= 11) {\r\n        console.log(\"They are >= 11\");\r\n        // Generate uuid for that newContact \"action.payload\"\r\n        action.payload.id = uuid();\r\n      } else {\r\n        console.log(\"They are < 11\");\r\n      }\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    }\r\n    case \"UPDATE_CONTACT\": {\r\n      const newContacts = state.contacts.map(contact => {\r\n        if (contact.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return contact;\r\n        }\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        contacts: newContacts\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nclass Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    // Dispatch Function inside state to be accessible via 'value'\r\n    dispatch: action => {\r\n      // Setting previous state to a new one by passing current state to reducer along with the action\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  // Good place for grabbing data from an API ..\r\n  // After inserting component to DOM .. after rendering happens\r\n  // It only happens \"once\"\r\n  // Get data from that API and then update state with it\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\nexport const Consumer = Context.Consumer;\r\nexport default Provider;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nclass Contact extends Component {\r\n  state = {\r\n    showContact: false\r\n  };\r\n  onArrowClick = () => {\r\n    this.setState({ showContact: !this.state.showContact });\r\n  };\r\n\r\n  onDeleteClick = async (dispatch, id) => {\r\n    // Let's mimic that the backend is gonna actually delete that contact before deleting it from the dom\r\n    // response is an empty Object\r\n    const action = {\r\n      type: \"DELETE_CONTACT\",\r\n      payload: id\r\n    };\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch(action);\r\n    } catch (e) {\r\n      dispatch(action);\r\n    }\r\n  };\r\n  render() {\r\n    const { contact } = this.props;\r\n    const { name, email, phone, id } = contact;\r\n\r\n    let output;\r\n    if (this.state.showContact) {\r\n      output = (\r\n        <ul className=\"list-group\">\r\n          <li className=\"list-group-item\">Email: {email}</li>\r\n          <li className=\"list-group-item\">Phone: {phone}</li>\r\n        </ul>\r\n      );\r\n    } else {\r\n      output = null;\r\n    }\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          // value is like this -> { contacts: [], dispatch: function(){} }\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card my-3\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">\r\n                  {name}\r\n                  <i className=\"fa fa-angle-down\" onClick={this.onArrowClick} />\r\n                  <Link to={`/contacts/edit/${id}`}>\r\n                    <i className=\"fa fa-pencil\" />\r\n                  </Link>\r\n                  <i\r\n                    className=\"fa fa-trash\"\r\n                    onClick={this.onDeleteClick.bind(this, dispatch, id)}\r\n                  />\r\n                </h5>\r\n                {output}\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-3\">\r\n                <span style={{ color: \"red\" }}>Contact</span> Manager\r\n              </h1>\r\n              {contacts.map(contact => {\r\n                return <Contact contact={contact} key={contact.id} />;\r\n              })}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nfunction TextInputGroup(props) {\r\n  const { name, label, type, value, onChange, error } = props;\r\n  // NOW error is like this .. 'Name is Required!!!'\r\n  let outputErr;\r\n  if (error) {\r\n    outputErr = <div className=\"invalid-feedback\">{error}</div>;\r\n  } else {\r\n    outputErr = null;\r\n  }\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        // if there is an error .. add is-invalid class\r\n        className={classNames(\"form-control\", { \"is-invalid\": error })}\r\n      />\r\n      {outputErr}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n// import uuid from \"uuid\";\r\nclass AddContact extends Component {\r\n  // state \"controls\" the behavior of these fields .. so they are called\r\n  // controlled components\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  onChangeInputHandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  onSubmitForm = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    // Check For Validation\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is Required!!!\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is Required!!!\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is Required!!!\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    // After 'posting' that newContact you are going to dispatch that action with payload\r\n    // axios\r\n    const response = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    const action = {\r\n      type: \"ADD_CONTACT\",\r\n      payload: response.data\r\n    };\r\n    dispatch(action);\r\n    // Clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n    // Redirect To Home Page\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card my-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmitForm.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    name=\"name\"\r\n                    label=\"Name\"\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={this.onChangeInputHandler}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={this.onChangeInputHandler}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    name=\"phone\"\r\n                    label=\"Phone\"\r\n                    type=\"text\"\r\n                    value={phone}\r\n                    onChange={this.onChangeInputHandler}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-primary\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  onChangeInputHandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  onSubmitForm = async (dispatch, id, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    // Check For Validation\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is Required!!!\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is Required!!!\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is Required!!!\" } });\r\n      return;\r\n    }\r\n\r\n    const editedContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    // THIS IS BEING TESTed YET\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      editedContact\r\n    );\r\n\r\n    // SOME STUFF GOES HERE\r\n    const action = {\r\n      type: \"UPDATE_CONTACT\",\r\n      payload: res.data\r\n    };\r\n    dispatch(action);\r\n\r\n    // Clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n    // Redirect To Home Page\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const contactId = this.props.match.params.id;\r\n    const resContact = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${contactId}`\r\n    );\r\n    const { name, email, phone } = resContact.data;\r\n    this.setState({\r\n      name,\r\n      email,\r\n      phone\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    const contactId = this.props.match.params.id;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card my-3\">\r\n              <div className=\"card-header\">Update Contact</div>\r\n              <div className=\"card-body\">\r\n                <form\r\n                  onSubmit={this.onSubmitForm.bind(this, dispatch, contactId)}\r\n                >\r\n                  <TextInputGroup\r\n                    name=\"name\"\r\n                    label=\"Name\"\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={this.onChangeInputHandler}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={this.onChangeInputHandler}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    name=\"phone\"\r\n                    label=\"Phone\"\r\n                    type=\"text\"\r\n                    value={phone}\r\n                    onChange={this.onChangeInputHandler}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-primary\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">A simple app for managing contacts</p>\r\n      <p>Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span style={{ color: \"red\" }}>404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, this page does not exist.</p>\r\n    </div>\r\n  );\r\n}\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  constructor() {\r\n    super();\r\n    console.log(\"constructor ran ...\");\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount...\");\r\n  }\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    console.log(\"component rendered...\");\r\n    return (\r\n      <div>\r\n        <h1>Test Component</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = props => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-danger mb-3\">\r\n      <div className=\"container\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.branding}\r\n        </Link>\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/\">\r\n              <i className=\"fa fa-home\" /> Home\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/contacts/add\">\r\n              <i className=\"fa fa-plus\" /> Add Contact\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">\r\n              <i className=\"fa fa-question\" /> About\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"Contact Manager\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nimport Header from \"./components/layout/Header\";\nimport Provider from \"./context\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route path=\"/about\" component={About} />\n                <Route path=\"/contacts/add\" component={AddContact} />\n                <Route path=\"/contacts/edit/:id\" component={EditContact} />\n                <Route path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}